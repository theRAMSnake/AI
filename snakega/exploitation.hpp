#pragma once

#include "neuroevolution/neuro_net.hpp"
#include "pop.hpp"

namespace snakega
{

class Exploitation
{
public:
   Exploitation(const Pop& src, const std::size_t size);
   Pop run(const std::size_t depth, const MutationConfig& cfg, const neuroevolution::DomainGeometry& geometry, neuroevolution::IFitnessEvaluator& eval);

private:

    void select(const MutationConfig& cfg);
    void reproduce(const MutationConfig& cfg);
    void evaluate(const neuroevolution::DomainGeometry& geometry, neuroevolution::IFitnessEvaluator& eval);

    const Pop& mSrc;
    const std::size_t mSize;
    std::vector<Pop> mLocalPops;
};

}